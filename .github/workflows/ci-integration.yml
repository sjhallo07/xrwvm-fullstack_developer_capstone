name: CI Integration Tests

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  integration-test:
    name: Docker Compose Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and start services
        run: |
          docker compose up --build -d
          echo "Services started, waiting for them to be healthy..."

      - name: Wait for services to be ready
        run: |
          # Function to check URL with retries
          check_url() {
            local url=$1
            local service_name=$2
            local max_retries=30
            local retry_count=0
            local wait_time=10
            
            echo "Checking $service_name at $url..."
            
            while [ $retry_count -lt $max_retries ]; do
              if curl -f -s --max-time 5 "$url" > /dev/null 2>&1; then
                echo "✓ $service_name is healthy"
                return 0
              fi
              
              retry_count=$((retry_count + 1))
              echo "Attempt $retry_count/$max_retries failed, waiting ${wait_time}s..."
              sleep $wait_time
            done
            
            echo "✗ $service_name failed to become healthy after $max_retries attempts"
            return 1
          }
          
          # Check sentiment analyzer service
          check_url "http://localhost:8080/analyze/hello%20world" "Sentiment Analyzer"
          sentiment_status=$?
          
          # Check Django API service
          check_url "http://localhost:8000/api/dealers/" "Django API"
          django_status=$?
          
          # Exit with error if either service check failed
          if [ $sentiment_status -ne 0 ] || [ $django_status -ne 0 ]; then
            echo "One or more services failed health checks"
            exit 1
          fi
          
          echo "All services are healthy!"

      - name: Run basic API tests
        run: |
          echo "Testing sentiment analyzer endpoint..."
          response=$(curl -s http://localhost:8080/analyze/hello%20world)
          echo "Sentiment response: $response"
          
          echo "Testing dealers API endpoint..."
          dealers_response=$(curl -s http://localhost:8000/api/dealers/)
          echo "Dealers response: $dealers_response"

      - name: Upload docker compose logs on failure
        if: failure()
        run: |
          echo "Collecting docker compose logs..."
          docker compose logs > docker-compose-logs.txt 2>&1
          
      - name: Upload logs as artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose-logs
          path: docker-compose-logs.txt
          retention-days: 7

      - name: Tear down services
        if: always()
        run: |
          echo "Stopping and removing containers..."
          docker compose down -v
          echo "Cleanup complete"
